package myproject.tijada_oop;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.Period;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import myproject.tijada_oop.SMS_DB.Connect_DB;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author jomsa
 */
public class EditStudent extends javax.swing.JDialog {

    /**
     * Creates new form Student
     */
    public EditStudent(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        dobTxtBx.addPropertyChangeListener("date", evt -> {
            Date dob = dobTxtBx.getDate();
            if (dob != null) {
                // Calculate age
                int currAge = getAge(dob);
                String ageStr = String.valueOf(currAge);

                // Update the label
                ageTxtBx.setText(ageStr);

                // Validate age
                if (currAge < 18 || currAge > 75) {
                    JOptionPane.showMessageDialog(null, "Students must be between 18 and 75 years old.");
                    ageTxtBx.setText(ageStr);
                    dobTxtBx.setDate(null); 
                    
                }
            } else {
                ageTxtBx.setText("Not provided");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnSex = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        studentPnl = new javax.swing.JPanel();
        studentFName = new javax.swing.JLabel();
        studentMName = new javax.swing.JLabel();
        fNameTxtBx = new javax.swing.JTextField();
        mNameTxtBx = new javax.swing.JTextField();
        studentSName = new javax.swing.JLabel();
        sNameTxtBx = new javax.swing.JTextField();
        studentSx = new javax.swing.JLabel();
        studentMale = new javax.swing.JRadioButton();
        studentFemale = new javax.swing.JRadioButton();
        studentEmail = new javax.swing.JLabel();
        emailTxtBx = new javax.swing.JTextField();
        studentDOB = new javax.swing.JLabel();
        dobTxtBx = new com.toedter.calendar.JDateChooser();
        studentContact = new javax.swing.JLabel();
        contactTxtBx = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        studentDemoProfTbPn = new javax.swing.JPanel();
        province = new javax.swing.JLabel();
        municipality = new javax.swing.JLabel();
        barangay = new javax.swing.JLabel();
        permaAdd = new javax.swing.JLabel();
        zip = new javax.swing.JLabel();
        zipTxtBx = new javax.swing.JTextField();
        census = new javax.swing.JLabel();
        cenCombo = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        otherDemo = new javax.swing.JLabel();
        religion = new javax.swing.JLabel();
        religionTxtBx = new javax.swing.JTextField();
        ethnicity = new javax.swing.JLabel();
        ethnicityTxtBx = new javax.swing.JTextField();
        civil_stat = new javax.swing.JLabel();
        civ_statCombo = new javax.swing.JComboBox<>();
        job = new javax.swing.JLabel();
        jobTxtBx = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        edBack = new javax.swing.JLabel();
        primary = new javax.swing.JLabel();
        primaryTxtBx = new javax.swing.JTextField();
        secondary = new javax.swing.JLabel();
        secTxtBx = new javax.swing.JTextField();
        tertiary = new javax.swing.JLabel();
        tertiaryTxtBx = new javax.swing.JTextField();
        techvocTxtBx = new javax.swing.JTextField();
        techvoc = new javax.swing.JLabel();
        provinceTxtBx = new javax.swing.JTextField();
        muniTxtBx = new javax.swing.JTextField();
        barTxtBx = new javax.swing.JTextField();
        natTxtBx = new javax.swing.JTextField();
        nation = new javax.swing.JLabel();
        studentFamProfTbPn = new javax.swing.JPanel();
        mother = new javax.swing.JLabel();
        motherNameTxtBx = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        motherName = new javax.swing.JLabel();
        motherAddress = new javax.swing.JLabel();
        motherAddressTxtBx = new javax.swing.JTextField();
        motherCivStatCombo = new javax.swing.JComboBox<>();
        motherCivStat = new javax.swing.JLabel();
        motherJobTxtBx = new javax.swing.JTextField();
        motherJob = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        fatherAddress = new javax.swing.JLabel();
        fatherAddressTxtBx = new javax.swing.JTextField();
        fatherCivStatCombo = new javax.swing.JComboBox<>();
        fatherCivStat = new javax.swing.JLabel();
        fatherJobTxtBx = new javax.swing.JTextField();
        fatherJob = new javax.swing.JLabel();
        father = new javax.swing.JLabel();
        fatherNameTxtBx = new javax.swing.JTextField();
        fatherName = new javax.swing.JLabel();
        guardianAddress = new javax.swing.JLabel();
        guardianAddTxtBx = new javax.swing.JTextField();
        guardian = new javax.swing.JLabel();
        guardianNameTxtBx = new javax.swing.JTextField();
        guradianName = new javax.swing.JLabel();
        guardianContact = new javax.swing.JLabel();
        guardianContactTxtBx = new javax.swing.JTextField();
        guardianSourceOfIncome = new javax.swing.JLabel();
        guardianAnnual = new javax.swing.JLabel();
        annualCombo = new javax.swing.JComboBox<>();
        sourceCombo = new javax.swing.JComboBox<>();
        studentRecTbPn = new javax.swing.JLayeredPane();
        studentID = new javax.swing.JLabel();
        studentIDTxtBx = new javax.swing.JTextField();
        ay = new javax.swing.JLabel();
        sem = new javax.swing.JLabel();
        ayCombo = new javax.swing.JComboBox<>();
        semCombo = new javax.swing.JComboBox<>();
        enrolStat = new javax.swing.JLabel();
        enrolStatCombo = new javax.swing.JComboBox<>();
        yrLvlCombo = new javax.swing.JComboBox<>();
        yrLvl = new javax.swing.JLabel();
        prog = new javax.swing.JLabel();
        progTxtBx = new javax.swing.JTextField();
        scholar = new javax.swing.JLabel();
        scholarCombo = new javax.swing.JComboBox<>();
        studentAge = new javax.swing.JLabel();
        ageTxtBx = new javax.swing.JLabel();
        studentExName = new javax.swing.JLabel();
        ExNameTxtBx = new javax.swing.JTextField();
        saveBttn = new javax.swing.JButton();
        cancelBttn = new javax.swing.JButton();
        clearBttn = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        studentPnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24))); // NOI18N

        studentFName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentFName.setText("First Name:");

        studentMName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentMName.setText("Middle Name:");

        fNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        fNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameTxtBxActionPerformed(evt);
            }
        });

        mNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        studentSName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentSName.setText("Surname:");

        sNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        sNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sNameTxtBxActionPerformed(evt);
            }
        });

        studentSx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentSx.setText("Sex:");

        btnSex.add(studentMale);
        studentMale.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentMale.setText("Male");

        btnSex.add(studentFemale);
        studentFemale.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentFemale.setText("Female");
        studentFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentFemaleActionPerformed(evt);
            }
        });

        studentEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentEmail.setText("Email Address:");

        emailTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        emailTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTxtBxActionPerformed(evt);
            }
        });

        studentDOB.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentDOB.setText("Date of Birth:");

        dobTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        studentContact.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentContact.setText("Contact No.:");

        contactTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        contactTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactTxtBxActionPerformed(evt);
            }
        });

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        province.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        province.setText("Province:");

        municipality.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        municipality.setText("Municipality:");

        barangay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        barangay.setText("Barangay:");

        permaAdd.setText("Permanent Address");

        zip.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        zip.setText("Zip Code:");

        zipTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        zipTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipTxtBxActionPerformed(evt);
            }
        });

        census.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        census.setText("Census:");

        cenCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cenCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an option:", "Urban", "Rural", "Suburban", "Region" }));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        otherDemo.setText("Others");

        religion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        religion.setText("Religion:");

        religionTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        religionTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                religionTxtBxActionPerformed(evt);
            }
        });

        ethnicity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ethnicity.setText("Ethnicity:");

        ethnicityTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ethnicityTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ethnicityTxtBxActionPerformed(evt);
            }
        });

        civil_stat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        civil_stat.setText("Civil Status:");

        civ_statCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        civ_statCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Widowed", "Widower" }));
        civ_statCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                civ_statComboActionPerformed(evt);
            }
        });

        job.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        job.setText("Job:");

        jobTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jobTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobTxtBxActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        edBack.setText("Education Background");

        primary.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        primary.setText("Primary:");

        primaryTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        primaryTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primaryTxtBxActionPerformed(evt);
            }
        });

        secondary.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        secondary.setText("Secondary:");

        secTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        secTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secTxtBxActionPerformed(evt);
            }
        });

        tertiary.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tertiary.setText("Tertiary:");

        tertiaryTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tertiaryTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tertiaryTxtBxActionPerformed(evt);
            }
        });

        techvocTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        techvocTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techvocTxtBxActionPerformed(evt);
            }
        });

        techvoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        techvoc.setText("Tech/Voc:");

        provinceTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        provinceTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provinceTxtBxActionPerformed(evt);
            }
        });

        muniTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        muniTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muniTxtBxActionPerformed(evt);
            }
        });

        barTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        barTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barTxtBxActionPerformed(evt);
            }
        });

        natTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        natTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natTxtBxActionPerformed(evt);
            }
        });

        nation.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        nation.setText("Nationality:");

        javax.swing.GroupLayout studentDemoProfTbPnLayout = new javax.swing.GroupLayout(studentDemoProfTbPn);
        studentDemoProfTbPn.setLayout(studentDemoProfTbPnLayout);
        studentDemoProfTbPnLayout.setHorizontalGroup(
            studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(permaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(municipality)
                            .addComponent(barangay, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(province, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zip, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(census, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(provinceTxtBx)
                            .addComponent(barTxtBx)
                            .addComponent(muniTxtBx)
                            .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zipTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cenCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(religion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(religionTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(otherDemo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                                    .addComponent(ethnicity)
                                    .addGap(17, 17, 17))
                                .addComponent(civil_stat, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(job))
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(ethnicityTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentDemoProfTbPnLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(civ_statCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(nation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(natTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(edBack, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(secondary)
                            .addComponent(primary)
                            .addComponent(tertiary)
                            .addComponent(techvoc))
                        .addGap(24, 24, 24)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(primaryTxtBx)
                            .addComponent(secTxtBx)
                            .addComponent(tertiaryTxtBx)
                            .addComponent(techvocTxtBx))))
                .addContainerGap())
        );
        studentDemoProfTbPnLayout.setVerticalGroup(
            studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(edBack)
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(primaryTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(primary))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondary))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tertiaryTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tertiary))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(techvocTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(techvoc)))
                    .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                        .addComponent(jSeparator3))
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(permaAdd)
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(province)
                            .addComponent(provinceTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(municipality)
                            .addComponent(muniTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barangay)
                            .addComponent(barTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zip))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(census)
                            .addComponent(cenCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(studentDemoProfTbPnLayout.createSequentialGroup()
                        .addComponent(otherDemo)
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(religionTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(religion))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ethnicityTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ethnicity))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(civil_stat)
                            .addComponent(civ_statCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(job))
                        .addGap(18, 18, 18)
                        .addGroup(studentDemoProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nation)
                            .addComponent(natTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Demograpic Profile", studentDemoProfTbPn);

        mother.setText("Mother");

        motherNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motherNameTxtBxActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        motherName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherName.setText("Full Name:");

        motherAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherAddress.setText("Address:");

        motherAddressTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherAddressTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motherAddressTxtBxActionPerformed(evt);
            }
        });

        motherCivStatCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherCivStatCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an option:", "Single", "Married", "Widow", "Deceased" }));
        motherCivStatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motherCivStatComboActionPerformed(evt);
            }
        });

        motherCivStat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherCivStat.setText("Civil Status:");

        motherJobTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherJobTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motherJobTxtBxActionPerformed(evt);
            }
        });

        motherJob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        motherJob.setText("Job:");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        fatherAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherAddress.setText("Address:");

        fatherAddressTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherAddressTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatherAddressTxtBxActionPerformed(evt);
            }
        });

        fatherCivStatCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherCivStatCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an option:", "Single", "Married", "Widower", "Deceased" }));
        fatherCivStatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatherCivStatComboActionPerformed(evt);
            }
        });

        fatherCivStat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherCivStat.setText("Civil Status:");

        fatherJobTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherJobTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatherJobTxtBxActionPerformed(evt);
            }
        });

        fatherJob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherJob.setText("Job:");

        father.setText("Father");

        fatherNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatherNameTxtBxActionPerformed(evt);
            }
        });

        fatherName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fatherName.setText("Full Name:");

        guardianAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianAddress.setText("Address:");

        guardianAddTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianAddTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianAddTxtBxActionPerformed(evt);
            }
        });

        guardian.setText("Guardian");

        guardianNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianNameTxtBxActionPerformed(evt);
            }
        });

        guradianName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guradianName.setText("Full Name:");

        guardianContact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianContact.setText("Contact No.:");

        guardianContactTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianContactTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardianContactTxtBxActionPerformed(evt);
            }
        });

        guardianSourceOfIncome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianSourceOfIncome.setText("Source of Income:");

        guardianAnnual.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        guardianAnnual.setText("Annual Income:");

        annualCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        annualCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Below ₱20,000", "₱20,000–₱40,000", "₱40,000–₱60,000", "₱60,000 and above" }));
        annualCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annualComboActionPerformed(evt);
            }
        });

        sourceCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sourceCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an option:", "Employment", "Freelancing", "Business ", "Government Assistance", "Retirement Pension", "Spouse Support" }));
        sourceCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentFamProfTbPnLayout = new javax.swing.GroupLayout(studentFamProfTbPn);
        studentFamProfTbPn.setLayout(studentFamProfTbPnLayout);
        studentFamProfTbPnLayout.setHorizontalGroup(
            studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mother, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentFamProfTbPnLayout.createSequentialGroup()
                            .addComponent(motherName)
                            .addGap(24, 24, 24)
                            .addComponent(motherNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(motherJob)
                            .addComponent(motherCivStat)
                            .addComponent(motherAddress))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(motherAddressTxtBx)
                            .addComponent(motherCivStatCombo, 0, 170, Short.MAX_VALUE)
                            .addComponent(motherJobTxtBx))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(father, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fatherJob)
                                    .addComponent(fatherCivStat)
                                    .addComponent(fatherAddress))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, studentFamProfTbPnLayout.createSequentialGroup()
                                .addComponent(fatherName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fatherAddressTxtBx)
                            .addComponent(fatherCivStatCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fatherJobTxtBx)
                            .addComponent(fatherNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(guardianContact)
                                        .addComponent(guardianAddress))
                                    .addComponent(guradianName, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(guardianAddTxtBx, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                    .addComponent(guardianContactTxtBx)
                                    .addComponent(guardianNameTxtBx)))
                            .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guardianSourceOfIncome)
                                    .addComponent(guardianAnnual))
                                .addGap(18, 18, 18)
                                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(annualCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sourceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addComponent(guardian, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        studentFamProfTbPnLayout.setVerticalGroup(
            studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(guardian)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardianNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guradianName))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardianContactTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guardianContact))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardianAddTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guardianAddress))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardianSourceOfIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sourceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardianAnnual, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(annualCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(mother)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(motherNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motherName))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(motherAddressTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motherAddress))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(motherCivStatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motherCivStat))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(motherJobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motherJob)))
                    .addGroup(studentFamProfTbPnLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(father)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatherNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherName))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatherAddressTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherAddress))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatherCivStatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherCivStat))
                        .addGap(18, 18, 18)
                        .addGroup(studentFamProfTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatherJobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherJob)))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Family Profile", studentFamProfTbPn);

        studentID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studentID.setText("Student No.:");

        studentIDTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studentIDTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDTxtBxActionPerformed(evt);
            }
        });

        ay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ay.setText("Academic Year:");

        sem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sem.setText("Semester:");

        ayCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option:", "2020-2021", "2021-2022", "2022-2023", "2023-2024", "2024-2025" }));
        ayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayComboActionPerformed(evt);
            }
        });

        semCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        semCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option:", "1st Semester", "2nd Semester", "Mid-Year/Summer Term" }));
        semCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semComboActionPerformed(evt);
            }
        });

        enrolStat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        enrolStat.setText("Enrollment Status:");

        enrolStatCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        enrolStatCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option:", "New Student", "Transferee", "Returnee", "Old Student" }));
        enrolStatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrolStatComboActionPerformed(evt);
            }
        });

        yrLvlCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        yrLvlCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option:", "1st Year", "2nd Year", "3rd Year", "4th Year", "5th Year" }));
        yrLvlCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yrLvlComboActionPerformed(evt);
            }
        });

        yrLvl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        yrLvl.setText("Year Level:");

        prog.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        prog.setText("Program:");

        progTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        progTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                progTxtBxActionPerformed(evt);
            }
        });

        scholar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        scholar.setText("Scholarship Type:");

        scholarCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        scholarCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Academic", "Athletic", "Financial Aid", "Merit-Based", "Government Scholarship", "Private Scholarship", "Special Scholarship", "None" }));
        scholarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scholarComboActionPerformed(evt);
            }
        });

        studentRecTbPn.setLayer(studentID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(studentIDTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(ay, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(sem, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(ayCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(semCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(enrolStat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(enrolStatCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(yrLvlCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(yrLvl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(prog, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(progTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(scholar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        studentRecTbPn.setLayer(scholarCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout studentRecTbPnLayout = new javax.swing.GroupLayout(studentRecTbPn);
        studentRecTbPn.setLayout(studentRecTbPnLayout);
        studentRecTbPnLayout.setHorizontalGroup(
            studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentRecTbPnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ay)
                    .addComponent(studentID)
                    .addComponent(sem)
                    .addComponent(enrolStat)
                    .addComponent(yrLvl))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(semCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ayCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enrolStatCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yrLvlCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentIDTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scholar)
                    .addComponent(prog))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progTxtBx, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(scholarCombo, 0, 1, Short.MAX_VALUE))
                .addGap(157, 157, 157))
        );
        studentRecTbPnLayout.setVerticalGroup(
            studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentRecTbPnLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentID)
                    .addComponent(studentIDTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prog)
                    .addComponent(progTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ay)
                    .addComponent(ayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scholar)
                    .addComponent(scholarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sem)
                    .addComponent(semCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enrolStat)
                    .addComponent(enrolStatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(studentRecTbPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yrLvl)
                    .addComponent(yrLvlCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student Record", studentRecTbPn);

        studentAge.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentAge.setText("Age:");

        ageTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ageTxtBx.setText("0");

        studentExName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        studentExName.setText("Extension:");

        ExNameTxtBx.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ExNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExNameTxtBxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentPnlLayout = new javax.swing.GroupLayout(studentPnl);
        studentPnl.setLayout(studentPnlLayout);
        studentPnlLayout.setHorizontalGroup(
            studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPnlLayout.createSequentialGroup()
                .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentPnlLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentFName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentMName)
                            .addComponent(studentSName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentExName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentSx, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentPnlLayout.createSequentialGroup()
                                .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fNameTxtBx)
                                        .addComponent(mNameTxtBx)
                                        .addComponent(sNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ExNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(studentPnlLayout.createSequentialGroup()
                                            .addComponent(studentContact, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(contactTxtBx))
                                        .addGroup(studentPnlLayout.createSequentialGroup()
                                            .addComponent(studentEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(emailTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(studentPnlLayout.createSequentialGroup()
                                        .addComponent(studentDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(studentPnlLayout.createSequentialGroup()
                                        .addComponent(studentAge, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ageTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(studentPnlLayout.createSequentialGroup()
                                .addComponent(studentMale, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(studentFemale)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        studentPnlLayout.setVerticalGroup(
            studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPnlLayout.createSequentialGroup()
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentFName)
                            .addComponent(fNameTxtBx))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentMName)
                            .addComponent(mNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentSName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ExNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentExName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentSx)
                            .addComponent(studentMale)
                            .addComponent(studentFemale))
                        .addGap(28, 28, 28))
                    .addGroup(studentPnlLayout.createSequentialGroup()
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentEmail)
                            .addComponent(emailTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentContact)
                            .addComponent(contactTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(studentDOB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dobTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentAge)
                            .addComponent(ageTxtBx))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        saveBttn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveBttn.setText("Save");
        saveBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBttnActionPerformed(evt);
            }
        });

        cancelBttn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancelBttn.setText("Cancel");
        cancelBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBttnActionPerformed(evt);
            }
        });

        clearBttn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clearBttn.setText("Clear");
        clearBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(studentPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void ExNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    public void updateStudent(int studentID, String[] studentDetails, String[] studentDemo, String[] studentFam, String[] comboInfo, String program, int yearLevel, String dobString, String gender) {
        Connection conn = null;

        try {
            conn = Connect_DB.connect();
            conn.setAutoCommit(false); // Start transaction

            // Get current values from the database
            Map<String, String> currentValues = new HashMap<>();
            currentValues.put("student_name", getCurrentValue(conn, "student_details", "student_name", studentID));
            currentValues.put("student_email", getCurrentValue(conn, "student_details", "student_email", studentID));
            currentValues.put("student_contact", getCurrentValue(conn, "student_details", "student_contact", studentID));
            currentValues.put("student_dob", getCurrentValue(conn, "student_details", "student_dob", studentID));
            currentValues.put("per_add", getCurrentValue(conn, "student_demo", "per_add", studentID));
            currentValues.put("zip", getCurrentValue(conn, "student_demo", "zip", studentID));
            currentValues.put("religion", getCurrentValue(conn, "student_demo", "religion", studentID));
            currentValues.put("acad_year", getCurrentValue(conn, "student_records", "acad_year", studentID));
            currentValues.put("program", getCurrentValue(conn, "student_records", "program", studentID));
            currentValues.put("mother_name", getCurrentValue(conn, "student_fam", "mother_name", studentID));
            currentValues.put("father_name", getCurrentValue(conn, "student_fam", "father_name", studentID));

            // Update student_details
            updateTable(conn, "UPDATE student_details SET student_name = ?, student_sx = ?, student_email = ?, student_contact = ?, student_dob = ? WHERE student_ID = ?",
                    new Object[]{
                            !studentDetails[0].equals(currentValues.get("student_name")) ? studentDetails[0] : currentValues.get("student_name"),
                            gender,
                            !studentDetails[2].equals(currentValues.get("student_email")) ? studentDetails[2] : currentValues.get("student_email"),
                            !studentDetails[3].equals(currentValues.get("student_contact")) ? studentDetails[3] : currentValues.get("student_contact"),
                            !dobString.equals(currentValues.get("student_dob")) ? dobString : currentValues.get("student_dob"),
                            studentID
                    });

            // Update student_demo
            updateTable(conn, "UPDATE student_demo SET per_add = ?, zip = ?, census = ?, religion = ?, ethnicity = ?, civ_stat_student = ?, job_student = ?, nat_student = ?, prim_school = ?, sec_school = ?, ter_school = ?, tech_voc = ? WHERE student_ID = ?",
                    new Object[]{
                            !studentDemo[0].equals(currentValues.get("per_add")) ? studentDemo[0] : currentValues.get("per_add"),
                            !studentDemo[3].equals(currentValues.get("zip")) ? studentDemo[3] : currentValues.get("zip"),
                            comboInfo[0],  // census
                            !studentDemo[4].equals(currentValues.get("religion")) ? studentDemo[4] : currentValues.get("religion"),
                            studentDemo[5], // ethnicity
                            comboInfo[1],  // civ_stat_student
                            studentDemo[6], // job_student
                            studentDemo[7], // nat_student
                            studentDemo[8], // prim_school
                            studentDemo[9], // sec_school
                            studentDemo[10], // ter_school
                            studentDemo[11], // tech_voc
                            studentID
                    });

            // Update student_fam
            updateTable(conn, "UPDATE student_fam SET mother_name = ?, mother_address = ?, civ_stat_mother = ?, job_mother = ?, father_name = ?, father_address = ?, civ_stat_father = ?, job_father = ?, guardian_name = ?, guardian_contact = ?, guardian_address = ?, income_source = ?, ann_income = ? WHERE student_ID = ?",
                    new Object[]{
                        !studentFam[0].equals(currentValues.get("mother_name")) ? studentFam[0] : currentValues.get("mother_name"),
                            studentFam[1], // mother_address
                            comboInfo[2], // civ_stat_mother
                            studentFam[2], // job_mother
                            !studentFam[3].equals(currentValues.get("father_name")) ? studentFam[3] : currentValues.get("father_name"),
                            studentFam[4], // father_address
                            comboInfo[3], // civ_stat_father
                            studentFam[5], // job_father
                            studentFam[6], // guardian_name
                            studentFam[7], // guardian_contact
                            studentFam[8], // guardian_address
                            comboInfo[4], // income_source
                            comboInfo[5], // ann_income
                            studentID
                    });

            updateTable(conn, "UPDATE student_records SET acad_year = ?, sem = ?, enrol_stat = ?, yr_lvl = ?, program = ?, scholar = ? WHERE student_ID = ?",
                    new Object[]{
                            !comboInfo[6].equals(currentValues.get("acad_year")) ? comboInfo[6] : currentValues.get("acad_year"),
                            comboInfo[7], // sem
                            comboInfo[8], // enrol_stat
                            yearLevel, // yr_lvl
                            !program.equals(currentValues.get("program")) ? program : currentValues.get("program"),
                            comboInfo[9], // scholar
                            studentID
                    });

            conn.commit();
            JOptionPane.showMessageDialog(null, "Student details updated successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
            try {
                if (conn != null) {
                    conn.rollback(); // Rollback if there is an error
                }
            } catch (SQLException rollbackEx) {
                rollbackEx.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "Error updating student details.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (conn != null) {
                    conn.setAutoCommit(true);
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

// Helper method to update a table
    private void updateTable(Connection conn, String query, Object[] params) throws SQLException {
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            for (int i = 0; i < params.length; i++) {
                switch (params[i]) {
                    case Integer integer -> stmt.setInt(i + 1, integer);
                    case String string -> stmt.setString(i + 1, string);
                    default -> {
                    }
                }
                // Add more types if necessary
            }
            stmt.executeUpdate();
        }
    }
    
    
    private String getCurrentValue(Connection conn, String tableName, String columnName, int studentID) {
        String query = "SELECT " + columnName + " FROM " + tableName + " WHERE student_ID = ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, studentID);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getString(columnName);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return "";
    }
    
    private void sNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sNameTxtBxActionPerformed

    private void fNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameTxtBxActionPerformed

    private void studentFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentFemaleActionPerformed

    private void emailTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTxtBxActionPerformed

    private void contactTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactTxtBxActionPerformed

    private void zipTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipTxtBxActionPerformed

    private void religionTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_religionTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_religionTxtBxActionPerformed

    private void ethnicityTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ethnicityTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ethnicityTxtBxActionPerformed

    private void civ_statComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_civ_statComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_civ_statComboActionPerformed

    private void jobTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobTxtBxActionPerformed

    private void primaryTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primaryTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_primaryTxtBxActionPerformed

    private void secTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secTxtBxActionPerformed

    private void tertiaryTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tertiaryTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tertiaryTxtBxActionPerformed

    private void techvocTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techvocTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_techvocTxtBxActionPerformed

    private void provinceTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provinceTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_provinceTxtBxActionPerformed

    private void muniTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muniTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_muniTxtBxActionPerformed

    private void barTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barTxtBxActionPerformed

    private void natTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_natTxtBxActionPerformed

    private void motherNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motherNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motherNameTxtBxActionPerformed

    private void motherAddressTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motherAddressTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motherAddressTxtBxActionPerformed

    private void motherCivStatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motherCivStatComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motherCivStatComboActionPerformed

    private void motherJobTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motherJobTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motherJobTxtBxActionPerformed

    private void fatherAddressTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatherAddressTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherAddressTxtBxActionPerformed

    private void fatherCivStatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatherCivStatComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherCivStatComboActionPerformed

    private void fatherJobTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatherJobTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherJobTxtBxActionPerformed

    private void fatherNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatherNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherNameTxtBxActionPerformed

    private void guardianAddTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianAddTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardianAddTxtBxActionPerformed

    private void guardianNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardianNameTxtBxActionPerformed

    private void guardianContactTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardianContactTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardianContactTxtBxActionPerformed

    private void annualComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annualComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annualComboActionPerformed

    private void sourceComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceComboActionPerformed

    private void studentIDTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDTxtBxActionPerformed

    private void ayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ayComboActionPerformed

    private void semComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semComboActionPerformed

    private void enrolStatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrolStatComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enrolStatComboActionPerformed

    private void yrLvlComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yrLvlComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yrLvlComboActionPerformed

    private void progTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_progTxtBxActionPerformed

    private void scholarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scholarComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scholarComboActionPerformed

    private void saveBttnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Collect student details
        String[] studentDetails = collectStudentDetails();
        if (studentDetails == null) return; // Exit if validation fails

        // Collect student demographic details
        String[] studentDemographics = collectStudentDemographics();
        if (studentDemographics == null) return; // Exit if validation fails

        // Collect student family details
        String[] studentFamily = collectStudentFamilyDetails();
        if (studentFamily == null) return; // Exit if validation fails

        // Get program input
        String program = progTxtBx.getText().trim();

        // Collect combo box selections
        String[] comboInfo = collectComboBoxSelections();
        if (comboInfo == null) return; // Exit if validation fails

        // Validate year level
        int yearLevel = validateYearLevel();
        if (yearLevel == -1) return; // Exit if validation fails

        // Get date of birth and validate
        String dobString = validateDateOfBirth();
        if (dobString == null) return; // Exit if validation fails

        // Get gender
        String gender = getSelectedGender();
        if (gender == null) {
            showMessage("Sex cannot be empty.");
            return; // Exit if validation fails
        }

        // Validate student ID
        int studentID = validateStudentID();
        if (studentID == -1) return; // Exit if validation fails

        // Call the updateStudent method with all the validated parameters
        updateStudent(studentID, studentDetails, studentDemographics, studentFamily, comboInfo, program, yearLevel, dobString, gender);
        this.dispose();
    }

    private String[] collectStudentDetails() {
        JTextField[] fields = { fNameTxtBx, mNameTxtBx, sNameTxtBx, ExNameTxtBx, emailTxtBx, contactTxtBx };
        String[] details = new String[fields.length];

        for (int i = 0; i < fields.length; i++) {
            String text = fields[i].getText().trim();
            if (i == 3) { // Handle extension name
                details[i] = text.isEmpty() ? "" : toTitleCase(text);
            } else if (text.isEmpty()) {
                showMessage("Please fill all the fields.");
                return null; // Validation failed
            } else {
                details[i] = toTitleCase(text);
            }
        }
        return details;
    }

    private String[] collectStudentDemographics() {
        JTextField[] fields = { provinceTxtBx, muniTxtBx, barTxtBx, zipTxtBx, religionTxtBx, ethnicityTxtBx, jobTxtBx, natTxtBx, primaryTxtBx, secTxtBx, tertiaryTxtBx, techvocTxtBx };
        String[] demographics = new String[fields.length];

        for (int i = 0; i < fields.length; i++) {
            String text = fields[i].getText().trim();
            if (text.isEmpty()) {
                showMessage("Please fill all the fields.");
                return null; // Validation failed
            }
            demographics[i] = toTitleCase(text);
        }
        return demographics;
    }

    private String[] collectStudentFamilyDetails() {
        JTextField[] fields = { motherNameTxtBx, motherAddressTxtBx, motherJobTxtBx, fatherNameTxtBx, fatherAddressTxtBx, fatherJobTxtBx, guardianNameTxtBx, guardianContactTxtBx, guardianAddTxtBx };
        String[] familyDetails = new String[fields.length];

        for (int i = 0; i < fields.length; i++) {
            String text = fields[i].getText().trim();
            if (text.isEmpty()) {
                showMessage("Please fill all the fields.");
                return null; // Validation failed
            }
            familyDetails[i] = toTitleCase(text);
        }
        return familyDetails;
    }

    private String[] collectComboBoxSelections() {
        JComboBox[] comboFields = { cenCombo, civ_statCombo, motherCivStatCombo, fatherCivStatCombo, sourceCombo, annualCombo, ayCombo, semCombo, enrolStatCombo, scholarCombo };
        String[] selections = new String[comboFields.length];

        for (int i = 0; i < comboFields.length; i++) {
            String selectedItem = comboFields[i].getSelectedItem().toString().trim();
            if (selectedItem.equals("Select an option:")) {
                showMessage("Please select a valid option.");
                return null; // Validation failed
            }
            selections[i] = toTitleCase(selectedItem);
        }
        return selections;
    }

    private int validateYearLevel() {
        String yrLvl = yrLvlCombo.getSelectedItem().toString().trim();

        // Check if the selected item is the default prompt
        if (yrLvl.equals("Select an option:")) {
            showMessage("Please select a valid year level.");
            return -1; // Validation failed
        }

        // Use regex to extract the numerical part from the string
        Pattern pattern = Pattern.compile("\\d+");
        Matcher matcher = pattern.matcher(yrLvl);

        // Check if a number is found
        if (matcher.find()) {
            int yearLevel = Integer.parseInt(matcher.group());

            // Validate the year level (should be positive)
            if (yearLevel > 0) {
                return yearLevel; // Valid year level
            }
        }

        showMessage("Invalid year level selected.");
        return -1;
    }

    private String validateDateOfBirth() {
        Date dob = dobTxtBx.getDate();
        if (dob == null) {
            showMessage("Date of birth cannot be empty.");
            return null; // Validation failed
        }

        // Calculate age
        LocalDate birthDate = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate currentDate = LocalDate.now();
        int age = Period.between(birthDate, currentDate).getYears();

        // Validate age
        if (age < 18) {
            showMessage("Students must be at least 18 years old.");
            return null; // Validation failed
        }

        // Format date of birth
        return new SimpleDateFormat("yyyy-MM-dd").format(dob);
    }

    private String getSelectedGender() {
        if (studentMale.isSelected()) {
            return "Male";
        } else if (studentFemale.isSelected()) {
            return "Female";
        } else {
            return null;
        }
    }
    
    private int validateStudentID() {
        String studentID = studentIDTxtBx.getText().trim();

        if (studentID.isEmpty()) {
            showMessage("Student ID cannot be empty.");
            return -1; // Validation failed
        }

        if (!studentID.matches("\\d+")) {
            showMessage("Student ID must be a valid positive number.");
            return -1; // Validation failed
        }

        int id = Integer.parseInt(studentID);

        if (id < 0) {
            showMessage("Student ID must be a valid positive number.");
            return -1; // Validation failed
        }

        return id; // Return the valid student ID
    }


    private void showMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    private String toTitleCase(String input) {
        if (input == null || input.isEmpty()) {
            return input;
        }
        String[] words = input.split(" ");
        StringBuilder titleCase = new StringBuilder();
        for (String word : words) {
            if (word.length() > 0) {
                titleCase.append(Character.toUpperCase(word.charAt(0)))
                        .append(word.substring(1).toLowerCase())
                        .append(" ");
            }
        }
        return titleCase.toString().trim();
    }
    
    private void clearBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBttnActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clearBttnActionPerformed

    private void cancelBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBttnActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel?", "Confirm Cancel", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (choice == JOptionPane.YES_OPTION) {
            // Clear all fields
            clearAllFields();

            // Close the current window
            this.dispose();  // Dispose of the current window
        }
    }//GEN-LAST:event_cancelBttnActionPerformed

    private void clearAllFields() {
        // Clear text fields
        JTextField[] textFields = {
            fNameTxtBx, mNameTxtBx, sNameTxtBx, ExNameTxtBx, emailTxtBx, contactTxtBx,
            provinceTxtBx, muniTxtBx, barTxtBx, zipTxtBx, religionTxtBx, ethnicityTxtBx,
            jobTxtBx, natTxtBx, primaryTxtBx, secTxtBx, tertiaryTxtBx, techvocTxtBx,
            motherNameTxtBx, motherAddressTxtBx, motherJobTxtBx,
            fatherNameTxtBx, fatherAddressTxtBx, fatherJobTxtBx,
            guardianNameTxtBx, guardianContactTxtBx, guardianAddTxtBx,
            studentIDTxtBx
        };

        for (JTextField textField : textFields) {
            if (textField != null) {
                textField.setText("");
            }
        }

        // Clear combo boxes
        JComboBox[] comboBoxes = {
            cenCombo, civ_statCombo, motherCivStatCombo, fatherCivStatCombo,
            sourceCombo, annualCombo, ayCombo, semCombo, enrolStatCombo, scholarCombo
        };

        for (JComboBox comboBox : comboBoxes) {
            if (comboBox != null) {
                comboBox.setSelectedIndex(0);
            }
        }

        // Clear radio buttons
        if (btnSex != null) {
            btnSex.clearSelection();
        }

        // Clear Date of Birth if populated
        if (dobTxtBx != null) {
            dobTxtBx.setDate(null);
        }
        
        if (progTxtBx != null) {
            progTxtBx.setText("");
        }
        
        if (yrLvlCombo != null) {
            yrLvlCombo.setSelectedIndex(0);
        }
    }

    private int getAge(Date dob){
        LocalDate birthDate = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate currentDate = LocalDate.now();
        int age = Period.between(birthDate, currentDate).getYears();
        return age;
    }
    
    /**
     * 
     * @param args the command line arguments
     */
    private javax.swing.JTextField ExNameTxtBx;
    private javax.swing.JLabel ageTxtBx;
    private javax.swing.JComboBox<String> annualCombo;
    private javax.swing.JLabel ay;
    private javax.swing.JComboBox<String> ayCombo;
    private javax.swing.JTextField barTxtBx;
    private javax.swing.JLabel barangay;
    private javax.swing.ButtonGroup btnSex;
    private javax.swing.JButton cancelBttn;
    private javax.swing.JComboBox<String> cenCombo;
    private javax.swing.JLabel census;
    private javax.swing.JComboBox<String> civ_statCombo;
    private javax.swing.JLabel civil_stat;
    private javax.swing.JButton clearBttn;
    private javax.swing.JTextField contactTxtBx;
    com.toedter.calendar.JDateChooser dobTxtBx;
    private javax.swing.JLabel edBack;
    private javax.swing.JTextField emailTxtBx;
    private javax.swing.JLabel enrolStat;
    private javax.swing.JComboBox<String> enrolStatCombo;
    private javax.swing.JLabel ethnicity;
    private javax.swing.JTextField ethnicityTxtBx;
    private javax.swing.JTextField fNameTxtBx;
    private javax.swing.JLabel father;
    private javax.swing.JLabel fatherAddress;
    private javax.swing.JTextField fatherAddressTxtBx;
    private javax.swing.JLabel fatherCivStat;
    private javax.swing.JComboBox<String> fatherCivStatCombo;
    private javax.swing.JLabel fatherJob;
    private javax.swing.JTextField fatherJobTxtBx;
    private javax.swing.JLabel fatherName;
    private javax.swing.JTextField fatherNameTxtBx;
    private javax.swing.JLabel guardian;
    private javax.swing.JTextField guardianAddTxtBx;
    private javax.swing.JLabel guardianAddress;
    private javax.swing.JLabel guardianAnnual;
    private javax.swing.JLabel guardianContact;
    private javax.swing.JTextField guardianContactTxtBx;
    private javax.swing.JTextField guardianNameTxtBx;
    private javax.swing.JLabel guardianSourceOfIncome;
    private javax.swing.JLabel guradianName;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel job;
    private javax.swing.JTextField jobTxtBx;
    private javax.swing.JTextField mNameTxtBx;
    private javax.swing.JLabel mother;
    private javax.swing.JLabel motherAddress;
    private javax.swing.JTextField motherAddressTxtBx;
    private javax.swing.JLabel motherCivStat;
    private javax.swing.JComboBox<String> motherCivStatCombo;
    private javax.swing.JLabel motherJob;
    private javax.swing.JTextField motherJobTxtBx;
    private javax.swing.JLabel motherName;
    private javax.swing.JTextField motherNameTxtBx;
    private javax.swing.JTextField muniTxtBx;
    private javax.swing.JLabel municipality;
    private javax.swing.JTextField natTxtBx;
    private javax.swing.JLabel nation;
    private javax.swing.JLabel otherDemo;
    private javax.swing.JLabel permaAdd;
    private javax.swing.JLabel primary;
    private javax.swing.JTextField primaryTxtBx;
    private javax.swing.JLabel prog;
    private javax.swing.JTextField progTxtBx;
    private javax.swing.JLabel province;
    private javax.swing.JTextField provinceTxtBx;
    private javax.swing.JLabel religion;
    private javax.swing.JTextField religionTxtBx;
    private javax.swing.JTextField sNameTxtBx;
    private javax.swing.JButton saveBttn;
    private javax.swing.JLabel scholar;
    private javax.swing.JComboBox<String> scholarCombo;
    private javax.swing.JTextField secTxtBx;
    private javax.swing.JLabel secondary;
    private javax.swing.JLabel sem;
    private javax.swing.JComboBox<String> semCombo;
    private javax.swing.JComboBox<String> sourceCombo;
    private javax.swing.JLabel studentAge;
    private javax.swing.JLabel studentContact;
    private javax.swing.JLabel studentDOB;
    private javax.swing.JPanel studentDemoProfTbPn;
    private javax.swing.JLabel studentEmail;
    private javax.swing.JLabel studentExName;
    private javax.swing.JLabel studentFName;
    private javax.swing.JPanel studentFamProfTbPn;
    private javax.swing.JRadioButton studentFemale;
    private javax.swing.JLabel studentID;
    private javax.swing.JTextField studentIDTxtBx;
    private javax.swing.JLabel studentMName;
    private javax.swing.JRadioButton studentMale;
    private javax.swing.JPanel studentPnl;
    private javax.swing.JLayeredPane studentRecTbPn;
    private javax.swing.JLabel studentSName;
    private javax.swing.JLabel studentSx;
    private javax.swing.JLabel techvoc;
    private javax.swing.JTextField techvocTxtBx;
    private javax.swing.JLabel tertiary;
    private javax.swing.JTextField tertiaryTxtBx;
    private javax.swing.JLabel yrLvl;
    private javax.swing.JComboBox<String> yrLvlCombo;
    private javax.swing.JLabel zip;
    private javax.swing.JTextField zipTxtBx;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
