/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package myproject.tijada_oop;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import myproject.tijada_oop.SMS_DB.Connect_DB;
import myproject.tijada_oop.SMS_DB.SMS;
/**
 *
 * @author jomsa
 */
public class EditCourse extends javax.swing.JDialog {

    /**
     * Creates new form EditCourse
     */
    public EditCourse(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnSex = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        coursePnl = new javax.swing.JPanel();
        code = new javax.swing.JLabel();
        desc = new javax.swing.JLabel();
        codeTxtBx = new javax.swing.JTextField();
        descTxtBx = new javax.swing.JTextField();
        spec = new javax.swing.JLabel();
        specTxtBx = new javax.swing.JTextField();
        dept = new javax.swing.JLabel();
        deptTxtBx = new javax.swing.JTextField();
        type = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox<>();
        saveBttn = new javax.swing.JButton();
        CancelBttn = new javax.swing.JButton();
        clearBttn = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        coursePnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        code.setText("Code:");

        desc.setText("Description:");

        codeTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTxtBxActionPerformed(evt);
            }
        });

        spec.setText("Specialization:");

        specTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specTxtBxActionPerformed(evt);
            }
        });

        dept.setText("Department:");

        deptTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptTxtBxActionPerformed(evt);
            }
        });

        type.setText("Type:");

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an option:", "Certificate", "Diploma", "Undergraduate", "Masteral", "Doctoral", "Vocational" }));

        javax.swing.GroupLayout coursePnlLayout = new javax.swing.GroupLayout(coursePnl);
        coursePnl.setLayout(coursePnlLayout);
        coursePnlLayout.setHorizontalGroup(
            coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePnlLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spec, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desc)
                    .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deptTxtBx)
                    .addComponent(specTxtBx, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, coursePnlLayout.createSequentialGroup()
                        .addComponent(codeTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(coursePnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addComponent(descTxtBx, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        coursePnlLayout.setVerticalGroup(
            coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePnlLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(code)
                    .addComponent(codeTxtBx))
                .addGap(18, 18, 18)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desc)
                    .addComponent(descTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type)
                    .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spec)
                    .addComponent(specTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(coursePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dept)
                    .addComponent(deptTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        saveBttn.setText("Save");
        saveBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBttnActionPerformed(evt);
            }
        });

        CancelBttn.setText("Cancel");
        CancelBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBttnActionPerformed(evt);
            }
        });

        clearBttn.setText("Clear");
        clearBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveBttn)
                        .addContainerGap())
                    .addComponent(coursePnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(coursePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateCourse(String[] course_info, String type) {
        Connection conn = null;

        try {
            conn = Connect_DB.connect();
            conn.setAutoCommit(false); // Start transaction

            // Get current values from the database
            Map<String, String> currentValues = new HashMap<>();
            currentValues.put("course_code", getCurrentValue(conn, "course", "course_code", course_info[0]));
            currentValues.put("description", getCurrentValue(conn, "course", "description", course_info[0]));
            currentValues.put("course_type", getCurrentValue(conn, "course", "course_type", course_info[0]));
            currentValues.put("spec", getCurrentValue(conn, "course", "spec", course_info[0]));
            currentValues.put("dept", getCurrentValue(conn, "course", "dept", course_info[0]));

            // Update course
            updateTable(conn, "UPDATE course SET description = ?, course_type = ?, spec = ?, dept = ? WHERE course_code = ?",
                    new Object[]{
                            !course_info[1].equals(currentValues.get("description")) ? course_info[1] : currentValues.get("description"), // description
                            !type.equals(currentValues.get("course_type")) ? type : currentValues.get("course_type"), // course_type
                            !course_info[2].equals(currentValues.get("spec")) ? course_info[2] : currentValues.get("spec"), // spec
                            !course_info[3].equals(currentValues.get("dept")) ? course_info[3] : currentValues.get("dept"), // dept
                            course_info[0] // course_code (used as ID, not editable)
                    });

            conn.commit(); // Commit transaction
            JOptionPane.showMessageDialog(null, "Course details updated successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
            try {
                if (conn != null) {
                    conn.rollback(); // Rollback if there is an error
                }
            } catch (SQLException rollbackEx) {
                rollbackEx.printStackTrace();
            }
            JOptionPane.showMessageDialog(null, "Error updating course details.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (conn != null) {
                    conn.setAutoCommit(true); // Reset auto-commit mode
                    conn.close(); // Close connection
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private String getCurrentValue(Connection conn, String tableName, String columnName, String course_code) {
        String query = "SELECT " + columnName + " FROM " + tableName + " WHERE course_code = ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, course_code);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getString(columnName);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return "";
    }
    
    private void updateTable(Connection conn, String query, Object[] params) throws SQLException {
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            for (int i = 0; i < params.length; i++) {
                switch (params[i]) {
                    case Integer integer -> stmt.setInt(i + 1, integer);
                    case String string -> stmt.setString(i + 1, string);
                    default -> {
                    }
                }
                // Add more types if necessary
            }
            stmt.executeUpdate();
        }
    }
    
    private void codeTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTxtBxActionPerformed

    private void specTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specTxtBxActionPerformed

    private void deptTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptTxtBxActionPerformed

    private void saveBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBttnActionPerformed
        // TODO add your handling code here:
        JTextField[] course_fields = {codeTxtBx, descTxtBx, specTxtBx, deptTxtBx};
    
        String[] course_info = getCourseInfo(course_fields);
        if (course_info == null){
            return;
        }

        String type = getSelectedType(typeCombo);
        if (type == null){
            return;
        }

        updateCourse(course_info, type);
        this.dispose();
    }//GEN-LAST:event_saveBttnActionPerformed

    private void clearBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBttnActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clearBttnActionPerformed

    private void CancelBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBttnActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel?", "Confirm Cancel", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (choice == JOptionPane.YES_OPTION) {
            // Clear all fields
            clearAllFields();

            // Close the current window
            this.dispose();  // Dispose of the current window
        }
    }//GEN-LAST:event_CancelBttnActionPerformed
    
    private void clearAllFields(){
        JTextField[] course_fields = {codeTxtBx, descTxtBx, specTxtBx, deptTxtBx};
        
        for (JTextField course_field : course_fields) {
            if (course_field != null) {
                course_field.setText(""); // Clear the text field
            }
        }
        
        if (typeCombo != null) {
            typeCombo.setSelectedIndex(0); // Reset to the first item
        }
    }
    
    private String toTitleCase(String text) {
        if (text == null || text.isEmpty()) {
            return text; // Return as is for null or empty input
        }
        return text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase();
    }
    

    private String[] getCourseInfo(JTextField[] course_fields){
        String[] course_info = new String[course_fields.length];
        for (int i = 0; i < course_fields.length; i++) {
            String text = course_fields[i].getText().trim();
            if (text.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields.");
                return null; // Return null to indicate failure
            }
            course_info[i] = toTitleCase(text);
        }
        return course_info;
    }
    
    private String getSelectedType(JComboBox typeCombo){
        String type =  typeCombo.getSelectedItem().toString().trim();
        if (type.equals("Select an option:")) {
                JOptionPane.showMessageDialog(null, "Please select a valid choice from the options..");
                return null;  // Return null to indicate failure
            }
        return toTitleCase(type);
    }
    
    /**
     * @param args the command line arguments
     */
    private javax.swing.JButton CancelBttn;
    private javax.swing.ButtonGroup btnSex;
    private javax.swing.JButton clearBttn;
    private javax.swing.JLabel code;
    private javax.swing.JTextField codeTxtBx;
    private javax.swing.JPanel coursePnl;
    private javax.swing.JLabel dept;
    private javax.swing.JTextField deptTxtBx;
    private javax.swing.JLabel desc;
    private javax.swing.JTextField descTxtBx;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JButton saveBttn;
    private javax.swing.JLabel spec;
    private javax.swing.JTextField specTxtBx;
    private javax.swing.JLabel type;
    private javax.swing.JComboBox<String> typeCombo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
