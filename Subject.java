package myproject.tijada_oop;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import myproject.tijada_oop.SMS_DB.SMS;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author jomsa
 */

public class Subject extends javax.swing.JDialog {

    /**
     * Creates new form Student
     */
    public Subject(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnSex = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        course_type = new javax.swing.ButtonGroup();
        SubjDetsPan = new javax.swing.JPanel();
        subjCode = new javax.swing.JLabel();
        subjDesc = new javax.swing.JLabel();
        subjCodeTxtBx = new javax.swing.JTextField();
        subjDescTxtBx = new javax.swing.JTextField();
        units = new javax.swing.JLabel();
        subjSpec = new javax.swing.JLabel();
        unitsTxtBx = new javax.swing.JTextField();
        subjSpecTxtBx = new javax.swing.JTextField();
        subjDept = new javax.swing.JLabel();
        subjDeptTxtBx = new javax.swing.JTextField();
        subjSchedTime = new javax.swing.JLabel();
        subjSchedTimeTxtBx = new javax.swing.JTextField();
        subjSchedDay = new javax.swing.JLabel();
        mon = new javax.swing.JCheckBox();
        tue = new javax.swing.JCheckBox();
        wed = new javax.swing.JCheckBox();
        thu = new javax.swing.JCheckBox();
        fri = new javax.swing.JCheckBox();
        sat = new javax.swing.JCheckBox();
        sun = new javax.swing.JCheckBox();
        elective = new javax.swing.JRadioButton();
        core = new javax.swing.JRadioButton();
        subjType = new javax.swing.JLabel();
        addBttn = new javax.swing.JButton();
        cancelBttn = new javax.swing.JButton();
        clearBttn = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        SubjDetsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Subject Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        subjCode.setText("Code:");

        subjDesc.setText("Description:");

        subjCodeTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjCodeTxtBxActionPerformed(evt);
            }
        });

        units.setText("Units:");

        subjSpec.setText("Specialization:");

        unitsTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitsTxtBxActionPerformed(evt);
            }
        });

        subjSpecTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjSpecTxtBxActionPerformed(evt);
            }
        });

        subjDept.setText("Department:");

        subjDeptTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjDeptTxtBxActionPerformed(evt);
            }
        });

        subjSchedTime.setText("Schedule Time:");

        subjSchedTimeTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjSchedTimeTxtBxActionPerformed(evt);
            }
        });

        subjSchedDay.setText("Schedule Day:");

        mon.setText("Mon");

        tue.setText("Tue");

        wed.setText("Wed");

        thu.setText("Thu");

        fri.setText("Fri");

        sat.setText("Sat");

        sun.setText("Sun");

        course_type.add(elective);
        elective.setText("Elective");

        course_type.add(core);
        core.setText("Core");

        subjType.setText("Type:");

        javax.swing.GroupLayout SubjDetsPanLayout = new javax.swing.GroupLayout(SubjDetsPan);
        SubjDetsPan.setLayout(SubjDetsPanLayout);
        SubjDetsPanLayout.setHorizontalGroup(
            SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SubjDetsPanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fri)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sun)
                .addGap(90, 90, 90))
            .addGroup(SubjDetsPanLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(units, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjDesc)
                    .addComponent(subjCode, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjDept, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjSchedTime, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjSchedDay, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjType, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjDetsPanLayout.createSequentialGroup()
                        .addComponent(core)
                        .addGap(18, 18, 18)
                        .addComponent(elective))
                    .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(subjDeptTxtBx)
                        .addComponent(subjDescTxtBx, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(subjSpecTxtBx, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(unitsTxtBx, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(subjCodeTxtBx, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(subjSchedTimeTxtBx, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SubjDetsPanLayout.createSequentialGroup()
                        .addComponent(mon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thu)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        SubjDetsPanLayout.setVerticalGroup(
            SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjDetsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjCode)
                    .addComponent(subjCodeTxtBx))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjDesc)
                    .addComponent(subjDescTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unitsTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(units))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjSpec)
                    .addComponent(subjSpecTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjDept)
                    .addComponent(subjDeptTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjSchedTime)
                    .addComponent(subjSchedTimeTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjSchedDay)
                    .addComponent(mon)
                    .addComponent(tue)
                    .addComponent(wed)
                    .addComponent(thu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fri)
                    .addComponent(sat)
                    .addComponent(sun))
                .addGap(24, 24, 24)
                .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(core)
                        .addComponent(elective))
                    .addComponent(subjType))
                .addGap(40, 40, 40))
        );

        addBttn.setText("Add");
        addBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBttnActionPerformed(evt);
            }
        });

        cancelBttn.setText("Cancel");
        cancelBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBttnActionPerformed(evt);
            }
        });

        clearBttn.setText("Clear");
        clearBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBttn)
                        .addContainerGap())
                    .addComponent(SubjDetsPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SubjDetsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjCodeTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjCodeTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjCodeTxtBxActionPerformed

    private void unitsTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitsTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitsTxtBxActionPerformed

    private void subjSpecTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjSpecTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjSpecTxtBxActionPerformed

    private void subjDeptTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjDeptTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjDeptTxtBxActionPerformed

    private void subjSchedTimeTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjSchedTimeTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjSchedTimeTxtBxActionPerformed

    private void addBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBttnActionPerformed
        // TODO add your handling code here:
        JTextField[] subj_Fields = {subjCodeTxtBx, subjDescTxtBx, subjSpecTxtBx, subjDeptTxtBx};
        
        String[] subjData = getsubjData(subj_Fields);
        if (subjData == null){
            return;
        }
        
        double units = getUnits(unitsTxtBx);
        if (units == -1){
            return;
        }
        
        String type = getSelectedType();
        if (type == null){
            return;
        }
        
        String schedDay = getschedDay();
        if (schedDay == null){
            return;
        }
        
        String schedTime = getSchedTime(subjSchedTimeTxtBx);
        if (schedTime == null){
            return;
        }
        
        SMS add = new SMS();
        add.addSubj(subjData, units, type, schedDay, schedTime);
    }//GEN-LAST:event_addBttnActionPerformed

    private void cancelBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBttnActionPerformed
        // TODO add your handling code here:
         int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel?", "Confirm Cancel", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (choice == JOptionPane.YES_OPTION) {
            // Clear all fields
            clearAllFields();

            // Close the current window
            this.dispose();  // Dispose of the current window
        }
    }//GEN-LAST:event_cancelBttnActionPerformed

    private void clearBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBttnActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clearBttnActionPerformed

    private void clearAllFields() {
        JTextField[] subj_Fields = {subjCodeTxtBx, subjDescTxtBx, subjSpecTxtBx, subjDeptTxtBx};

        for (JTextField subj_Field : subj_Fields) {
            if (subj_Field != null) {
                subj_Field.setText("");
            }
        }

        // Clear the units text field
        if (unitsTxtBx != null) {
            unitsTxtBx.setText(""); // Clear the text field
        }

        // Clear the schedule time text field
        if (subjSchedTimeTxtBx != null) {
            subjSchedTimeTxtBx.setText(""); // Clear the text field
        }

        // Clear the selection of radio buttons for course type
        if (course_type != null) {
            course_type.clearSelection(); // Clear selected radio button
        }

        // Clear the selection of checkboxes for days of the week
        mon.setSelected(false);
        tue.setSelected(false);
        wed.setSelected(false);
        thu.setSelected(false);
        fri.setSelected(false);
        sat.setSelected(false);
        sun.setSelected(false);
    }
    
    private String[] getsubjData(JTextField[] subjFields){
        String[] subjData = new String[subjFields.length];
        for (int i = 0; i < subjFields.length; i++) {
            String text = subjFields[i].getText().trim();
            if (text.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields");
                return null; // Return null to indicate failure
            }
            subjData[i] = toTitleCase(text);
        }
        return subjData;
    }
    
    private String toTitleCase(String text) {
        if (text == null || text.isEmpty()) {
            return text; // Return as is for null or empty input
        }
        return text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase();
    }
    
    private double getUnits(JTextField unitsTxtBx){
        String units = unitsTxtBx.getText().trim();
        if (units.isEmpty() || !units.matches("[-+]?\\d*\\.?\\d+([eE][-+]?\\d+)?")) {
            JOptionPane.showMessageDialog(null, "Units must be a valid number.");
            return -1;
        }
        return Double.parseDouble(units);
    }
    
    private String getSelectedType(){
        if (core.isSelected()) {
            return "Core";
        } else if (elective.isSelected()) {
            return "Elective";
        } else {
            JOptionPane.showMessageDialog(null, "Type cannot be empty.");
            return null;
        }
    }
    
   private String getschedDay() {
        StringBuilder sched = new StringBuilder();

        if (mon.isSelected()) {
            sched.append("Mon");
        }
        if (tue.isSelected()) {
            if (sched.length() > 0) sched.append(", "); // Add a comma if there are already days added
            sched.append("Tue");
        }
        if (wed.isSelected()) {
            if (sched.length() > 0) sched.append(", ");
            sched.append("Wed");
        }
        if (thu.isSelected()) {
            if (sched.length() > 0) sched.append(", ");
            sched.append("Thu");
        }
        if (fri.isSelected()) {
            if (sched.length() > 0) sched.append(", ");
            sched.append("Fri");
        }
        if (sat.isSelected()) {
            if (sched.length() > 0) sched.append(", ");
            sched.append("Sat");
        }
        if (sun.isSelected()) {
            if (sched.length() > 0) sched.append(", ");
            sched.append("Sun");
        }
        
        if (sched.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one day.");
            return null; // Return null to indicate no selection
    }

        return sched.toString(); // Convert StringBuilder to String and return
    }
   
   private String getSchedTime(JTextField subjSchedTimeTxtBx) {
        String time = subjSchedTimeTxtBx.getText().trim();

        // Regular expression to match the time format "H:MM - H:MM"
        String timePattern = "^(1[0-2]|[1-9]):[0-5][0-9] - (1[0-2]|[1-9]):[0-5][0-9]$";

        if (!time.matches(timePattern)) {
            JOptionPane.showMessageDialog(null, "Schedule time must be in the format 'H:MM - H:MM'.");
            return null;
        }
        return time;
    }
    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SubjDetsPan;
    private javax.swing.JButton addBttn;
    private javax.swing.ButtonGroup btnSex;
    private javax.swing.JButton cancelBttn;
    private javax.swing.JButton clearBttn;
    private javax.swing.JRadioButton core;
    private javax.swing.ButtonGroup course_type;
    private javax.swing.JRadioButton elective;
    private javax.swing.JCheckBox fri;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JCheckBox mon;
    private javax.swing.JCheckBox sat;
    private javax.swing.JLabel subjCode;
    private javax.swing.JTextField subjCodeTxtBx;
    private javax.swing.JLabel subjDept;
    private javax.swing.JTextField subjDeptTxtBx;
    private javax.swing.JLabel subjDesc;
    private javax.swing.JTextField subjDescTxtBx;
    private javax.swing.JLabel subjSchedDay;
    private javax.swing.JLabel subjSchedTime;
    private javax.swing.JTextField subjSchedTimeTxtBx;
    private javax.swing.JLabel subjSpec;
    private javax.swing.JTextField subjSpecTxtBx;
    private javax.swing.JLabel subjType;
    private javax.swing.JCheckBox sun;
    private javax.swing.JCheckBox thu;
    private javax.swing.JCheckBox tue;
    private javax.swing.JLabel units;
    private javax.swing.JTextField unitsTxtBx;
    private javax.swing.JCheckBox wed;
    // End of variables declaration//GEN-END:variables
}
