/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package myproject.tijada_oop;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.*;
import myproject.tijada_oop.SMS_DB.SMS;
/**
 *
 * @author jomsa
 */
public class Professor extends javax.swing.JDialog {

    /**
     * Creates new form Professor
     */
    public Professor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        profDOBChooser.addPropertyChangeListener("date", evt -> {
            Date dob = profDOBChooser.getDate();
            if (dob != null) {
                // Calculate age
                int currAge = getAge(dob);
                String ageStr = String.valueOf(currAge);

                // Update the label dynamically
                profAgeTracker.setText(ageStr);

                // Validate age
                if (currAge < 24 || currAge > 75) {
                    JOptionPane.showMessageDialog(null, "Professors must be between 24 and 75 years old.");
                    profAgeTracker.setText(ageStr);
                    profDOBChooser.setDate(null); 
                    
                }
            } else {
                profAgeTracker.setText("Not provided");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnSex = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        profDetsPan = new javax.swing.JPanel();
        profFname = new javax.swing.JLabel();
        profMname = new javax.swing.JLabel();
        profFnameTxtBx = new javax.swing.JTextField();
        profMnameTxtBx = new javax.swing.JTextField();
        profSname = new javax.swing.JLabel();
        profExName = new javax.swing.JLabel();
        profSnameTxtBx = new javax.swing.JTextField();
        profSex = new javax.swing.JLabel();
        profMale = new javax.swing.JRadioButton();
        profFemale = new javax.swing.JRadioButton();
        profDOB = new javax.swing.JLabel();
        profDOBChooser = new com.toedter.calendar.JDateChooser();
        profAge = new javax.swing.JLabel();
        profAgeTracker = new javax.swing.JLabel();
        profExNameTxtBx = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        profContactPane = new javax.swing.JLayeredPane();
        profEmailtTxtBx = new javax.swing.JTextField();
        profAddress = new javax.swing.JLabel();
        profAddressTxtBx = new javax.swing.JTextField();
        profContact = new javax.swing.JLabel();
        profEmail = new javax.swing.JLabel();
        profContactTxtBx = new javax.swing.JTextField();
        profDetsPane = new javax.swing.JLayeredPane();
        profPosTxtBx = new javax.swing.JTextField();
        profDept = new javax.swing.JLabel();
        profDeptTxtBx = new javax.swing.JTextField();
        profIDno = new javax.swing.JLabel();
        profPos = new javax.swing.JLabel();
        profIDTxtBx = new javax.swing.JTextField();
        profSpec = new javax.swing.JLabel();
        profSpecTxtBx = new javax.swing.JTextField();
        addBttn = new javax.swing.JButton();
        cancelBttn = new javax.swing.JButton();
        clearBttn = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        profDetsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Professor Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        profDetsPan.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                profDetsPanAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        profFname.setText("First Name:");

        profMname.setText("Middle Name:");

        profFnameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profFnameTxtBxActionPerformed(evt);
            }
        });

        profSname.setText("Surname:");

        profExName.setText("Extension:");

        profSnameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profSnameTxtBxActionPerformed(evt);
            }
        });

        profSex.setText("Sex:");

        btnSex.add(profMale);
        profMale.setText("Male");

        btnSex.add(profFemale);
        profFemale.setText("Female");
        profFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profFemaleActionPerformed(evt);
            }
        });

        profDOB.setText("Date of Birth:");

        profAge.setText("Age:");

        profAgeTracker.setText("0");

        profExNameTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profExNameTxtBxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profDetsPanLayout = new javax.swing.GroupLayout(profDetsPan);
        profDetsPan.setLayout(profDetsPanLayout);
        profDetsPanLayout.setHorizontalGroup(
            profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profDetsPanLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profDetsPanLayout.createSequentialGroup()
                        .addComponent(profDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(profDOBChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profDetsPanLayout.createSequentialGroup()
                        .addComponent(profAge, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(profAgeTracker, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profDetsPanLayout.createSequentialGroup()
                        .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profFname, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profMname)
                            .addComponent(profSname, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profExName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profSex, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(profFnameTxtBx)
                                .addComponent(profMnameTxtBx)
                                .addComponent(profSnameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(profDetsPanLayout.createSequentialGroup()
                                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(profExNameTxtBx, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(profMale, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(profFemale)))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        profDetsPanLayout.setVerticalGroup(
            profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profDetsPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profFname)
                    .addComponent(profFnameTxtBx))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profMname)
                    .addComponent(profMnameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profSnameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profSname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profExName)
                    .addComponent(profExNameTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profSex)
                    .addComponent(profMale)
                    .addComponent(profFemale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profDOBChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profDOB))
                .addGap(12, 12, 12)
                .addGroup(profDetsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profAge)
                    .addComponent(profAgeTracker))
                .addContainerGap())
        );

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        profAddress.setText("Address:");

        profAddressTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profAddressTxtBxActionPerformed(evt);
            }
        });

        profContact.setText("Contact No.:");

        profEmail.setText("Email:");

        profContactTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profContactTxtBxActionPerformed(evt);
            }
        });

        profContactPane.setLayer(profEmailtTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profContactPane.setLayer(profAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profContactPane.setLayer(profAddressTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profContactPane.setLayer(profContact, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profContactPane.setLayer(profEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profContactPane.setLayer(profContactTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout profContactPaneLayout = new javax.swing.GroupLayout(profContactPane);
        profContactPane.setLayout(profContactPaneLayout);
        profContactPaneLayout.setHorizontalGroup(
            profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profContactPaneLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profContact, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profEmail)
                    .addComponent(profAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(profContactTxtBx)
                    .addComponent(profEmailtTxtBx)
                    .addComponent(profAddressTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        profContactPaneLayout.setVerticalGroup(
            profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profContactPaneLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profContact)
                    .addComponent(profContactTxtBx))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profEmail)
                    .addComponent(profEmailtTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(profContactPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profAddressTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profAddress))
                .addGap(212, 212, 212))
        );

        jTabbedPane1.addTab("Contact Details", profContactPane);

        profDept.setText("Department:");

        profDeptTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profDeptTxtBxActionPerformed(evt);
            }
        });

        profIDno.setText("ID No.:");

        profPos.setText("Position:");

        profIDTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profIDTxtBxActionPerformed(evt);
            }
        });

        profSpec.setText("Specialization:");

        profSpecTxtBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profSpecTxtBxActionPerformed(evt);
            }
        });

        profDetsPane.setLayer(profPosTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profDept, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profDeptTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profIDno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profPos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profIDTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profSpec, javax.swing.JLayeredPane.DEFAULT_LAYER);
        profDetsPane.setLayer(profSpecTxtBx, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout profDetsPaneLayout = new javax.swing.GroupLayout(profDetsPane);
        profDetsPane.setLayout(profDetsPaneLayout);
        profDetsPaneLayout.setHorizontalGroup(
            profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profDetsPaneLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profIDno, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profPos)
                    .addComponent(profDept, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profSpecTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(profPosTxtBx)
                        .addComponent(profDeptTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(profIDTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        profDetsPaneLayout.setVerticalGroup(
            profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profDetsPaneLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profIDno)
                    .addComponent(profIDTxtBx))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profPos)
                    .addComponent(profPosTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profDeptTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profDept))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profDetsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profSpecTxtBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profSpec))
                .addGap(178, 178, 178))
        );

        jTabbedPane1.addTab("Professional Details", profDetsPane);

        addBttn.setText("Add");
        addBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBttnActionPerformed(evt);
            }
        });

        cancelBttn.setText("Cancel");
        cancelBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBttnActionPerformed(evt);
            }
        });

        clearBttn.setText("Clear");
        clearBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clearBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBttn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(profDetsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(profDetsPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    private void profFnameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profFnameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profFnameTxtBxActionPerformed

    private void profSnameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profSnameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profSnameTxtBxActionPerformed

    private void profFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profFemaleActionPerformed

    private void profExNameTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profExNameTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profExNameTxtBxActionPerformed

    private void profAddressTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profAddressTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profAddressTxtBxActionPerformed

    private void profContactTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profContactTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profContactTxtBxActionPerformed

    private void profDeptTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profDeptTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profDeptTxtBxActionPerformed

    private void profIDTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profIDTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profIDTxtBxActionPerformed

    private void profSpecTxtBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profSpecTxtBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profSpecTxtBxActionPerformed

    private void profDetsPanAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_profDetsPanAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_profDetsPanAncestorAdded

    private void addBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBttnActionPerformed
        // TODO add your handling code here:
        JTextField[] prof_details_fields = {profFnameTxtBx, profMnameTxtBx, profSnameTxtBx, profExNameTxtBx,
            profContactTxtBx, profEmailtTxtBx, profAddressTxtBx, profPosTxtBx, profDeptTxtBx, profSpecTxtBx
        };
        
        String[] prof_details = getProfDets(prof_details_fields);
        if (prof_details == null){
            return;
        }
        
        String gender = getSelectedGender();
        if (gender == null) {
            return;
        } 
        
        Date dob = profDOBChooser.getDate();
        String dobString = formatDOB(dob);
        if (dob == null) {
            return;
        } 
        
        int profID = getPID(profIDTxtBx);
        if (profID == -1) {
            return;
        }
        
        SMS add = new SMS();
        add.addProf(prof_details, dobString, gender, profID);
        this.dispose();
    }//GEN-LAST:event_addBttnActionPerformed

    private void clearBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBttnActionPerformed
        // TODO add your handling code here:
        clearAllFields();
    }//GEN-LAST:event_clearBttnActionPerformed

    private void cancelBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBttnActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel?", "Confirm Cancel", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (choice == JOptionPane.YES_OPTION) {
            // Clear all fields
            clearAllFields();

            // Close the current window
            this.dispose();  // Dispose of the current window
        }
    }//GEN-LAST:event_cancelBttnActionPerformed

    private void clearAllFields(){
    JTextField[] prof_details_fields = {profFnameTxtBx, profMnameTxtBx, profSnameTxtBx, profExNameTxtBx,
            profContactTxtBx, profEmailtTxtBx, profAddressTxtBx, profPosTxtBx, profDeptTxtBx, profSpecTxtBx
        };
        
        for (JTextField prof_details_field : prof_details_fields) {
            if (prof_details_field != null) {
                prof_details_field.setText(""); // Clear the text field
            }
        }
        
        if (btnSex != null) {
            btnSex.clearSelection(); // Clear selected radio button
        }
        
        if (profIDTxtBx != null) {
            profIDTxtBx.setText(""); // Clear the text field
        }
        
        if (profDOBChooser != null) {
            profDOBChooser.setDate(null); // Reset the date
        }
    }
    
    private String toTitleCase(String text) {
        if (text == null || text.isEmpty()) {
            return text; // Return as is for null or empty input
        }
        return text.substring(0, 1).toUpperCase() + text.substring(1).toLowerCase();
    }
    
    private String getSelectedGender() {
        if (profMale.isSelected()) {
            return "Male";
        } else if (profFemale.isSelected()) {
            return "Female";
        } else {
            JOptionPane.showMessageDialog(null, "Sex cannot be empty.");
            return null;
        }
    }
    
    private String[] getProfDets(JTextField[] prof_details_fields){
        String[] prof_details = new String[prof_details_fields.length];
        
        for (int i = 0; i < prof_details_fields.length; i++){
            String text = prof_details_fields[i].getText().trim();
            
            if (i == 3) { // Handling the extension name
                // Allow empty extension name
                prof_details[i] = toTitleCase(text); // Convert to title case even if empty
            } else {
                if (text.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill all the fields in your Personal Details.");
                    return null;  // Return null to indicate failure
                }
                prof_details[i] = toTitleCase(text);
            }     
        }
        return prof_details;
    }
    
    private String formatDOB(Date dob){
        String dobStr;
        if (dob != null) {
            dobStr = new SimpleDateFormat("yyyy-MM-dd").format(dob);
            
        } else {
            JOptionPane.showMessageDialog(null, "Date of birth cannot be empty.");
            return null;
        }
        return dobStr;
    }
    
    private int getPID(JTextField profIDTxtBx) {
        String profId = profIDTxtBx.getText().trim();

        // Check if empty
        if (profId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Professor ID cannot be empty.");
            return -1; // Validation failed
        }

        // Check if positive number
        if (!profId.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Professor ID must be a valid positive number.");
            return -1; // Validation failed
        }

        // Parse the professor ID to an integer
        int id = Integer.parseInt(profId);

        // Check if the ID is negative (though it shouldn't be possible due to regex)
        if (id < 0) {
            JOptionPane.showMessageDialog(null, "Professor ID must be a valid positive number.");
            return -1; // Validation failed
        }

        return id; // Return the valid professor ID
    }
    
    private int getAge(Date dob){
        LocalDate birthDate = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate currentDate = LocalDate.now();
        int age = Period.between(birthDate, currentDate).getYears();
        return age;
    }

    private javax.swing.JButton addBttn;
    private javax.swing.ButtonGroup btnSex;
    private javax.swing.JButton cancelBttn;
    private javax.swing.JButton clearBttn;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel profAddress;
    private javax.swing.JTextField profAddressTxtBx;
    private javax.swing.JLabel profAge;
    private javax.swing.JLabel profAgeTracker;
    private javax.swing.JLabel profContact;
    private javax.swing.JLayeredPane profContactPane;
    private javax.swing.JTextField profContactTxtBx;
    private javax.swing.JLabel profDOB;
    private com.toedter.calendar.JDateChooser profDOBChooser;
    private javax.swing.JLabel profDept;
    private javax.swing.JTextField profDeptTxtBx;
    private javax.swing.JPanel profDetsPan;
    private javax.swing.JLayeredPane profDetsPane;
    private javax.swing.JLabel profEmail;
    private javax.swing.JTextField profEmailtTxtBx;
    private javax.swing.JLabel profExName;
    private javax.swing.JTextField profExNameTxtBx;
    private javax.swing.JRadioButton profFemale;
    private javax.swing.JLabel profFname;
    private javax.swing.JTextField profFnameTxtBx;
    private javax.swing.JTextField profIDTxtBx;
    private javax.swing.JLabel profIDno;
    private javax.swing.JRadioButton profMale;
    private javax.swing.JLabel profMname;
    private javax.swing.JTextField profMnameTxtBx;
    private javax.swing.JLabel profPos;
    private javax.swing.JTextField profPosTxtBx;
    private javax.swing.JLabel profSex;
    private javax.swing.JLabel profSname;
    private javax.swing.JTextField profSnameTxtBx;
    private javax.swing.JLabel profSpec;
    private javax.swing.JTextField profSpecTxtBx;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
